// Copyright 2018 REMME
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ------------------------------------------------------------------------

syntax = "proto3";

message CertificateMethod {
    enum Method {
        STORE = 0;
        REVOKE = 1;
    }
}

message NewCertificatePayload {
    // A raw certificate file in DER encoding.
    string certificate_raw = 1;
    // SHA512 hash of certificate_raw signed by the user's private key on REMME
    // blockchain and then by the private key of the certificate. Needed to
    // verify, that the user actually owns the provided certificate.
    string signature_rem = 2;
    string signature_crt = 3;
}

message RevokeCertificatePayload {
    // The address of a certificate in the storage generated by the transaction processor.
    string address = 1;
}

message CertificateStorage {
    // Hash of the certificate raw binary.
    string hash = 1;
    // The UID field of a certificate.
    string owner = 2;
    bool revoked = 3;
    // TODO: Exploit some of certificate fields to resolve hash collisions.
}
